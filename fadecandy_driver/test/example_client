#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from fadecandy_msgs.msg import LEDArray, LEDStrip
from std_msgs.msg import ColorRGBA


class ExampleClient(Node):
    def __init__(self):
        super().__init__('fadecandy_client')
        self.led_array_pub_ = self.create_publisher(LEDArray, 'set_leds', 10)
        timer_period = 0.1  # seconds
        self.timer = self.create_timer(timer_period, self.timer_callback)

        self.colors = [ColorRGBA(r=1.0, g=1.0, b=1.0), ColorRGBA(r=1.0), ColorRGBA(g=1.0), ColorRGBA(b=1.0)]
        self.num_led_strips = 8
        self.bar_start = 0
        self.bar_length = 3
        self.num_leds = 21
        self.color_i = 0



    def timer_callback(self):
        led_array = LEDArray()

        for led_strip in range(self.num_led_strips):
            led_strip = LEDStrip()
            led_strip.colors = [ColorRGBA()] * self.num_leds
            for bar_offset in range(self.bar_length):
                led_strip.colors[(self.bar_start + bar_offset) % self.num_leds] = self.colors[self.color_i]
            led_array.strips.append(led_strip)

        self.led_array_pub_.publish(led_array)

        self.bar_start = (self.bar_start + 1) % self.num_leds
        if self.bar_start == 0:
            self.color_i = (self.color_i + 1) % len(self.colors)


def main(args=None):
    rclpy.init(args=args)

    example_client = ExampleClient()

    rclpy.spin(example_client)
    example_client.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
